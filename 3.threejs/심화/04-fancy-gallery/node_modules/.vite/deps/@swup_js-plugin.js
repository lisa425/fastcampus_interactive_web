import {
  f,
  h
} from "./chunk-XRL5BE3U.js";
import "./chunk-RSJERJUL.js";

// node_modules/@swup/plugin/dist/index.modern.js
function r() {
  return r = Object.assign ? Object.assign.bind() : function(r2) {
    for (var n2 = 1; n2 < arguments.length; n2++) {
      var e2 = arguments[n2];
      for (var t in e2)
        Object.prototype.hasOwnProperty.call(e2, t) && (r2[t] = e2[t]);
    }
    return r2;
  }, r.apply(this, arguments);
}
var n = (r2) => String(r2).split(".").map((r3) => String(parseInt(r3 || "0", 10))).concat(["0", "0"]).slice(0, 3).join(".");
var e = class {
  constructor() {
    this.isSwupPlugin = true, this.swup = void 0, this.version = void 0, this.requires = {}, this.handlersToUnregister = [];
  }
  mount() {
  }
  unmount() {
    this.handlersToUnregister.forEach((r2) => r2()), this.handlersToUnregister = [];
  }
  _beforeMount() {
    if (!this.name)
      throw new Error("You must define a name of plugin when creating a class.");
  }
  _afterUnmount() {
  }
  _checkRequirements() {
    return "object" != typeof this.requires || Object.entries(this.requires).forEach(([r2, e2]) => {
      if (!function(r3, e3, t) {
        const s2 = function(r4, n2) {
          var e4;
          if ("swup" === r4)
            return null != (e4 = n2.version) ? e4 : "";
          {
            var t2;
            const e5 = n2.findPlugin(r4);
            return null != (t2 = null == e5 ? void 0 : e5.version) ? t2 : "";
          }
        }(r3, t);
        return !!s2 && ((r4, e4) => e4.every((e5) => {
          const [, t2, s3] = e5.match(/^([\D]+)?(.*)$/) || [];
          var o2, i;
          return ((r5, n2) => {
            const e6 = { "": (r6) => 0 === r6, ">": (r6) => r6 > 0, ">=": (r6) => r6 >= 0, "<": (r6) => r6 < 0, "<=": (r6) => r6 <= 0 };
            return (e6[n2] || e6[""])(r5);
          })((i = s3, o2 = n(o2 = r4), i = n(i), o2.localeCompare(i, void 0, { numeric: true })), t2 || ">=");
        }))(s2, e3);
      }(r2, e2 = Array.isArray(e2) ? e2 : [e2], this.swup)) {
        const n2 = `${r2} ${e2.join(", ")}`;
        throw new Error(`Plugin version mismatch: ${this.name} requires ${n2}`);
      }
    }), true;
  }
  on(r2, n2, e2 = {}) {
    var t;
    n2 = !(t = n2).name.startsWith("bound ") || t.hasOwnProperty("prototype") ? n2.bind(this) : n2;
    const s2 = this.swup.hooks.on(r2, n2, e2);
    return this.handlersToUnregister.push(s2), s2;
  }
  once(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { once: true }));
  }
  before(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { before: true }));
  }
  replace(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { replace: true }));
  }
  off(r2, n2) {
    return this.swup.hooks.off(r2, n2);
  }
};

// node_modules/@swup/js-plugin/dist/index.modern.js
function o() {
  return o = Object.assign ? Object.assign.bind() : function(t) {
    for (var n2 = 1; n2 < arguments.length; n2++) {
      var i = arguments[n2];
      for (var o2 in i)
        Object.prototype.hasOwnProperty.call(i, o2) && (t[o2] = i[o2]);
    }
    return t;
  }, o.apply(this, arguments);
}
var a = { from: "(.*)", to: "(.*)", out: (t) => t(), in: (t) => t() };
var s = class extends e {
  constructor(t) {
    var i, s2;
    super(), i = this, this.name = "SwupJsPlugin", this.requires = { swup: ">=4" }, this.defaults = { animations: [], matchOptions: {} }, this.options = void 0, this.animations = [], this.awaitOutAnimation = async function(t2, { skip: n2 }) {
      n2 || await i.findAndRunAnimation(t2, "out");
    }, this.awaitInAnimation = async function(t2, { skip: n2 }) {
      n2 || await i.findAndRunAnimation(t2, "in");
    }, Array.isArray(t) && (t = { animations: t }), this.options = o({}, this.defaults, t), this.options.animations.push(a), this.animations = (s2 = this.options.matchOptions, this.options.animations.map((t2) => function(t3, i2) {
      return o({}, t3, { matchesFrom: h(t3.from, i2), matchesTo: h(t3.to, i2) });
    }(t2, s2)));
  }
  mount() {
    this.replace("animation:out:await", this.awaitOutAnimation, { priority: -1 }), this.replace("animation:in:await", this.awaitInAnimation, { priority: -1 });
  }
  async findAndRunAnimation(t, n2) {
    const o2 = function(t2, n3) {
      return function(t3, n4, i, o3) {
        let a2 = 0;
        const s2 = t3.reduceRight((t4, s3) => {
          const r2 = function(t5, n5, i2, o4) {
            let a3 = 0;
            const s4 = t5.matchesFrom(n5);
            return s4 && (a3 += 1), t5.matchesTo(i2) && (a3 += 1), s4 && t5.to === o4 && (a3 += 2), a3;
          }(s3, n4, i, o3);
          return r2 >= a2 ? (a2 = r2, s3) : t4;
        }, null);
        return s2;
      }(t2, n3.from.url, n3.to.url, n3.animation.name);
    }(this.animations, t);
    if (o2) {
      const a2 = function(t2, n3, i) {
        const o3 = t2.matchesFrom(n3.from.url), a3 = t2.matchesTo(n3.to.url);
        return { visit: n3, direction: i, from: { url: n3.from.url, pattern: t2.from, params: o3 ? o3.params : {} }, to: { url: n3.to.url, pattern: t2.to, params: a3 ? a3.params : {} } };
      }(o2, t, n2);
      await function(t2, n3) {
        const { direction: o3 } = n3, a3 = t2[o3];
        return a3 ? new Promise((t3) => {
          const o4 = a3(() => t3(), n3);
          f(o4) && o4.then(t3);
        }) : (console.warn(`Missing animation function for '${o3}' phase`), Promise.resolve());
      }(o2, a2);
    }
  }
};
export {
  s as default
};
//# sourceMappingURL=@swup_js-plugin.js.map
