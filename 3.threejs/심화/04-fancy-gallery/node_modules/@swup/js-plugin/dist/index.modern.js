import t from"@swup/plugin";import{matchPath as n,isPromise as i}from"swup";function o(){return o=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var i=arguments[n];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},o.apply(this,arguments)}const a={from:"(.*)",to:"(.*)",out:t=>t(),in:t=>t()};class s extends t{constructor(t){var i,s;super(),i=this,this.name="SwupJsPlugin",this.requires={swup:">=4"},this.defaults={animations:[],matchOptions:{}},this.options=void 0,this.animations=[],this.awaitOutAnimation=async function(t,{skip:n}){n||await i.findAndRunAnimation(t,"out")},this.awaitInAnimation=async function(t,{skip:n}){n||await i.findAndRunAnimation(t,"in")},Array.isArray(t)&&(t={animations:t}),this.options=o({},this.defaults,t),this.options.animations.push(a),this.animations=(s=this.options.matchOptions,this.options.animations.map(t=>function(t,i){return o({},t,{matchesFrom:n(t.from,i),matchesTo:n(t.to,i)})}(t,s)))}mount(){this.replace("animation:out:await",this.awaitOutAnimation,{priority:-1}),this.replace("animation:in:await",this.awaitInAnimation,{priority:-1})}async findAndRunAnimation(t,n){const o=function(t,n){return function(t,n,i,o){let a=0;const s=t.reduceRight((t,s)=>{const r=function(t,n,i,o){let a=0;const s=t.matchesFrom(n);return s&&(a+=1),t.matchesTo(i)&&(a+=1),s&&t.to===o&&(a+=2),a}(s,n,i,o);return r>=a?(a=r,s):t},null);return s}(t,n.from.url,n.to.url,n.animation.name)}(this.animations,t);if(o){const a=function(t,n,i){const o=t.matchesFrom(n.from.url),a=t.matchesTo(n.to.url);return{visit:n,direction:i,from:{url:n.from.url,pattern:t.from,params:o?o.params:{}},to:{url:n.to.url,pattern:t.to,params:a?a.params:{}}}}(o,t,n);await function(t,n){const{direction:o}=n,a=t[o];return a?new Promise(t=>{const o=a(()=>t(),n);i(o)&&o.then(t)}):(console.warn(`Missing animation function for '${o}' phase`),Promise.resolve())}(o,a)}}}export{s as default};
//# sourceMappingURL=index.modern.js.map
